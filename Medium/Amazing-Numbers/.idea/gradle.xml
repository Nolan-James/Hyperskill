<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="GradleMigrationSettings" migrationVersion="1" />
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="delegatedBuild" value="false" />
        <option name="testRunner" value="GRADLE" />
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="modules">
          <set>
            <option value="$PROJECT_DIR$" />
            <option value="$PROJECT_DIR$/Amazing Numbers/task" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Concat positive numbers" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Creating list" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Output the list's elements" />
            <option value="$PROJECT_DIR$/Topics/ArrayList/Theory" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Only true or false" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Safe converting" />
            <option value="$PROJECT_DIR$/Topics/Boxing and unboxing/Theory" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement compareTo method" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Implement comparing by additional fields" />
            <option value="$PROJECT_DIR$/Topics/Comparable/Theory" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Boxes are not just objects_" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Correct the usage of non-generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Initialize an object of a generic class" />
            <option value="$PROJECT_DIR$/Topics/Generics and Object/Theory" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Correct the program" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Pastry packing optimization" />
            <option value="$PROJECT_DIR$/Topics/Introduction to generic programming/Theory" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/Cutting out the middle of a string" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/Double characters" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/Parse url" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/Piece of alphabet" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/The longest word" />
            <option value="$PROJECT_DIR$/Topics/Processing strings/Theory" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Greek letters" />
            <option value="$PROJECT_DIR$/Topics/The List interface/Theory" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Initialize a collection" />
            <option value="$PROJECT_DIR$/Topics/What are collections/Theory" />
            <option value="$PROJECT_DIR$/util" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
</project>